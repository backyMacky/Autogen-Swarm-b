classDiagram
    class Config {
        +OPENAI_API_KEY: str
        +MODEL: str
        +TEMPERATURE: float
        +MAX_ROUND: int
        +SECRET_KEY: str
        +ASSISTANT_ID: str
        +llm_config(): Dict
    }

    class WebScraper {
        -session: Session
        +scrape_url(url: str): str
    }

    class OpenAIAssistant {
        -client: OpenAI
        -assistant_id: str
        +get_response(query: str): str
    }

    class BusinessAnalyzer {
        -config: Config
        -openai_assistant: OpenAIAssistant
        -web_scraper: WebScraper
        -coordinator: AssistantAgent
        -market_analyst: AssistantAgent
        -tech_expert: AssistantAgent
        -financial_advisor: AssistantAgent
        -user_proxy: UserProxyAgent
        +setup_agents()
        +run_analysis(project_brief: str): str
    }

    class FlaskApp {
        +config: Config
        +HTML_TEMPLATE: str
        +index(): str
    }

    class AssistantAgent {
        +name: str
        +llm_config: Dict
        +system_message: str
    }

    class UserProxyAgent {
        +name: str
        +human_input_mode: str
        +max_consecutive_auto_reply: int
        +llm_config: Dict
        +code_execution_config: Dict
    }

    BusinessAnalyzer --> Config
    BusinessAnalyzer --> OpenAIAssistant
    BusinessAnalyzer --> WebScraper
    BusinessAnalyzer --> AssistantAgent
    BusinessAnalyzer --> UserProxyAgent
    FlaskApp --> BusinessAnalyzer
    FlaskApp --> Config
    OpenAIAssistant --> Config
